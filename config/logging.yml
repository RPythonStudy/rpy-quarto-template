###
# 파일명: config/logging.yml
# 목적: 로깅 프레임워크에 대한 정책 설정
# 기능: 
#  - (참고) 경로와 프로젝트명은 .env에서 설정합니다.
#  - PROJECT_NAME=myproject
#  - LOG_PATH=/var/log/myproject/logs
#  - (로그 파일명은 핸들러에서 /service.log, /audit.log 등으로 조합)
# 변경이력
#  - 2025-09-01: 최초 생성 (BenKorea)
###

version: 1
disable_existing_loggers: false



formatters:
  simple:
    format: '[%(asctime)s] [%(levelname)s] %(name)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  json:
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s", "pathname": "%(pathname)s", "lineno": %(lineno)d, "funcName": "%(funcName)s"}'
    datefmt: '%Y-%m-%dT%H:%M:%S'

handlers:
  console:
    class: logging.StreamHandler
    level: NOTSET
    formatter: simple
    stream: ext://sys.stdout

  service_file:
    class: logging.FileHandler
    level: NOTSET
    formatter: json
    filename: ${LOG_PATH}/service.log
    encoding: utf-8
    delay: true

  audit_file:
    class: logging.FileHandler
    level: NOTSET
    formatter: json
    filename: ${LOG_PATH}/audit.log
    encoding: utf-8
    delay: true

root:
  level: INFO
  handlers: [console, service_file]

loggers:
  ${PROJECT_NAME}:
    level: INFO
    propagate: true   # 콘솔/서비스 로그는 루트 핸들러로 전달

  # 개인정보보호정책: audit_log는 전용 파일에만 기록, 절대 stdout에 출력하지 않음
  audit:
    level: INFO
    handlers: [audit_file]
    propagate: false
